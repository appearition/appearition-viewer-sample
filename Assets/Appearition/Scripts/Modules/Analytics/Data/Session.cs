using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace Appearition.Analytics
{
    /// <summary>
    /// Container for a full analytics session. Sessions are usually divided from the moment the user starts the application until the moment the user closes it.
    /// A session is made of Activities, which can be classified as a group of actions made per user. Each of these could be a single UI panel, a functionality of your app, etc.
    /// </summary>
    [Serializable]
    public class Session
    {
        //Main session variables
        public string TenantKey;
        public int ChannelId;
        public string SessionKey;
        public List<AnalyticsData> ClientInformation;
        public List<Activity> Activities;

        //Time variables
        public string StartUtcDateTime;
        public DateTime StartDateTime => AppearitionGate.ConvertStringToDateTime(StartUtcDateTime);
        public string EndUtcDateTime;
        public DateTime EndDateTime => AppearitionGate.ConvertStringToDateTime(EndUtcDateTime);
        /// <summary>
        /// Current user timezone.
        /// </summary>
        public string OriginatingTimezone;

        //Information generated by the EMS.
        /// <summary>
        /// Information about the current user.
        /// It can be the username, name of your choice or authentication token; but we recommend using the token.
        /// </summary>
        public string UserKey;
        /// <summary>
        /// Current user global IP address.
        /// </summary>
        public string OriginatingIpAddress;
        /// <summary>
        /// Information about the current device used by the current user.
        /// </summary>
        public string UserAgent;

        //Runtime Variables
        public bool IsSyncedWithEms = false;

        #region Constructors

        public Session()
        {
            SessionKey = AppearitionGate.GenerateNewGUID();

            OriginatingTimezone = TimeZoneInfo.Local.Id;
            StartUtcDateTime = AppearitionGate.GetCurrentDateAndTime();
            Activities = new List<Activity>();

            //Enter base client information
            ClientInformation = new List<AnalyticsData>();
            ClientInformation.Add(new AnalyticsData(DeviceInfoConstants.DEVICE_INFO_NAME, SystemInfo.deviceName));
            ClientInformation.Add(new AnalyticsData(DeviceInfoConstants.DEVICE_INFO_MODEL, SystemInfo.deviceModel));
            ClientInformation.Add(new AnalyticsData(DeviceInfoConstants.DEVICE_INFO_OS, SystemInfo.operatingSystem));
            ClientInformation.Add(new AnalyticsData(DeviceInfoConstants.DEVICE_INFO_SUPPORT_GYRO, SystemInfo.supportsGyroscope.ToString()));
            ClientInformation.Add(new AnalyticsData(DeviceInfoConstants.DEVICE_INFO_SUPPORT_LOCATION, SystemInfo.supportsLocationService.ToString()));
            ClientInformation.Add(new AnalyticsData(DeviceInfoConstants.DEVICE_SCREEN_WIDTH, Screen.width.ToString()));
            ClientInformation.Add(new AnalyticsData(DeviceInfoConstants.DEVICE_SCREEN_HEIGHT, Screen.height.ToString()));
        }

        public Session(string tenantKey, int channelId) : this()
        {
            TenantKey = tenantKey;
            ChannelId = channelId;
        }

        public Session(string tenantKey, int channelId, Dictionary<string, string> clientInformation) : this(tenantKey, channelId)
        {
            if (clientInformation != null)
            {
                //Wipe base content
                ClientInformation.Clear();

                foreach (var kvp in clientInformation)
                    ClientInformation.Add(new AnalyticsData(kvp));
            }
        }

        #endregion
    }
}